[gd_scene load_steps=4 format=2]

[ext_resource path="res://resources/tilesets/demo/demoset.tres" type="TileSet" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

void fragment() {
    // Get the vertex color or the color from the texture if set
    vec4 finalColor = min(texture(TEXTURE, UV), COLOR);
    //vec3 finalColor = textureLod(SCREEN_TEXTURE, SCREEN_UV, 0.0).rgb;

    if(AT_LIGHT_PASS) {
        // For all fragments in the light we just use the input color
        COLOR = finalColor;
    } else {
        // For all other fragments we make them B&W
        //float value = dot(finalColor.rgb, vec3(0.2125, 0.7154, 0.0721));
        float value = dot(finalColor.rgb, vec3(0.1, 0.1, 0.1));
        COLOR = vec4(value, value, value, 1.0);
    }
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )

[node name="Level" type="Node2D"]
material = SubResource( 2 )

[node name="TileMap" type="TileMap" parent="."]
use_parent_material = true
tile_set = ExtResource( 1 )
format = 1

[node name="Props" type="Node2D" parent="."]
use_parent_material = true

[node name="Spawns" type="Node2D" parent="."]

[node name="Notes" type="Node2D" parent="."]
use_parent_material = true
